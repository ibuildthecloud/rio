// Code generated by go-bindata.
// sources:
// stacks/cert-manager-stack.yaml
// stacks/coredns-stack.yaml
// stacks/istio-crd-stack.yaml
// stacks/istio-stack.yaml
// stacks/istio-telemetry-stack.yaml
// stacks/localstorage-stack.yaml
// stacks/nfs-stack.yaml
// stacks/prometheus-stack.yaml
// stacks/rio-autoscaler-stack.yaml
// DO NOT EDIT!

package stacks

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _stacksCertManagerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x83\x5b\x08\x04\xd6\x21\xb7\xa2\x9b\x31\x26\xe4\x90\x36\x84\xde\xc5\x7a\xf5\xac\x2c\xd9\x3f\xea\xcc\xac\x5b\x53\xfa\xdd\x8b\x25\x39\x56\x69\xc0\x3e\xee\x9b\xdf\xcc\xee\x9b\xb7\x02\xde\x7b\x07\xa9\x2b\x22\x07\x56\x13\x6d\xb2\x1d\xf8\x78\x26\xea\x42\xde\xda\xd0\xf4\xe0\xe8\x45\x7c\x4e\x32\xea\x86\x6e\x6e\x07\x7c\xa2\x97\x6f\x5f\x64\xe9\xf3\xdd\xed\xcd\xb9\x8c\x5f\x8a\x34\xf4\xdc\xf9\xd4\x31\x44\x20\xb3\xb2\xcb\x69\xe7\xbb\x68\xfb\xb9\x28\x70\x0c\x9d\x2b\xd8\x23\xe9\xbf\xc8\xf8\xe0\x99\xd4\xe7\x76\x3a\xfa\x68\x3b\xd4\xf4\xf9\xf7\x7a\xf3\xf2\xbd\x79\x5a\x7d\x5d\x3d\x6c\x5e\x9a\xc7\xa7\xd5\xc3\xe6\xcf\x19\x78\x2e\x21\x3c\xe7\xe0\xdd\xa1\xa6\x55\xf8\x69\x0f\x32\xd4\x5c\x8e\xd1\xa6\xf6\xe4\x70\xbe\x8d\x49\x32\x26\xc0\xb6\x60\x83\x00\xa7\x3e\x27\x93\x6c\x84\xf4\xd6\x61\x22\xd8\x67\x23\x07\x51\xc4\xf7\x16\x17\x8a\x28\xd8\x30\x24\x17\x76\xb8\xa6\x27\xe4\x4e\xb3\x68\x0b\x3e\x5d\xbd\x50\x2e\x58\x54\xd5\x5b\xd9\x82\x13\x74\x4c\xec\x7d\x54\xdb\xb8\x22\x9a\x63\x73\xba\xa5\x69\xb1\xf3\xc9\xeb\x29\xb3\x4f\x83\x1f\x3a\xfb\x31\xf4\x28\x52\xc0\xcb\x0f\x62\xdc\xdf\xdb\xd0\xbf\xda\xfb\x01\x5b\xbf\xda\x10\x90\x3a\x5c\x24\xbf\x71\x7b\xcd\x3c\xb0\xfa\x9d\x77\x56\x2f\x4d\xbc\x60\xc9\xd0\x7a\x5c\xed\x15\x46\xaa\x1f\x05\x32\x75\x1a\xda\x5b\xf6\x76\x1b\x50\xd3\xff\xff\xa4\x22\x6a\x21\x8e\x7d\x7f\xc4\x6b\x5a\xcc\xf7\x36\xfe\x1f\xd2\x4c\x45\x8e\x69\xfc\x0d\x00\x00\xff\xff\x22\x78\xed\xc4\x3e\x03\x00\x00")

func stacksCertManagerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCertManagerStackYaml,
		"stacks/cert-manager-stack.yaml",
	)
}

func stacksCertManagerStackYaml() (*asset, error) {
	bytes, err := stacksCertManagerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/cert-manager-stack.yaml", size: 830, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksCorednsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf6\x01\x2c\x4a\x82\x3e\x7f\x75\x79\x6c\xea\x43\x2e\x39\xb4\x45\xaf\x06\x43\xae\x2d\xc2\xfc\xc3\x2e\x95\xc6\x68\xfb\xee\x05\x4d\xcb\x50\xe3\x46\x17\x2d\x77\x86\xcb\xc5\xcc\xe8\x18\x0e\xf6\xc8\x72\x05\x50\xca\xf2\xbf\x54\x19\x43\x96\xf0\xab\xb9\x9c\x01\x84\xdc\x0c\xf0\xf3\x7a\x28\x1f\x12\x45\xe2\x45\x63\x44\xe5\xf2\xb8\x68\x9c\xa6\x67\xa4\x80\x19\x19\xb4\x9b\x38\x23\x09\x17\xb5\x72\x60\x43\xa3\x8c\x21\xa1\x28\x29\xb0\xe9\xff\x5a\x2c\x87\x97\x2f\x45\xc3\x60\x03\xa3\x9e\x08\xdf\x60\x53\xe2\x4c\xa8\xfc\x9b\xf6\x41\x39\x97\x47\x8a\xd3\x71\xfc\xf7\x23\x0b\xfe\xef\x45\x9d\x28\x7a\xcc\x23\x4e\x0c\xf2\x63\xbf\x19\xfe\x86\x5e\xcf\x20\xa0\xc5\xac\x5b\x42\x8e\xee\x45\x14\x9d\x16\x14\xad\xf4\x88\x30\x74\xab\x79\x30\x23\xbd\x58\x8d\x57\x4d\x09\x4d\xe0\x2a\x6b\x29\x60\x8c\x9c\xab\xc8\x2a\xed\x95\x31\x12\x9e\x76\xdf\xf6\x9f\x1e\x9f\x3e\xef\xbf\xee\xbe\x7c\x7f\x7c\xd8\xdd\x50\x43\x31\x49\x50\xce\x5d\x4d\xf1\x5e\x05\x53\x47\x35\xd0\xdc\xd6\x68\xea\x76\xd7\xa7\xda\x87\x48\x78\xb0\x0e\x67\x27\x67\x7b\x0b\xf1\x62\xf1\xfb\x6c\x7c\x4d\x91\x71\x26\xf7\x9d\xf8\x6f\x10\x9d\xe8\x3b\xb9\x19\xe4\x66\x68\x27\x93\xd6\x26\xf0\x3b\x70\x81\x9a\xac\xd3\x15\x2e\x42\xae\x3d\x66\xb2\xba\xde\x38\xba\xf8\xac\xdc\x3e\x21\x79\xcb\x6c\x63\xb8\x6d\xe5\x2c\xe7\xf5\x0f\x95\xf5\x08\x18\x4c\x8a\x36\x64\xbe\x87\x66\x59\xef\x91\x12\x95\xfb\x6e\x50\x1e\x39\xa9\xf9\x46\xcd\xa7\x1e\x51\x9f\x24\x8c\x39\x27\xd9\xb6\x97\x3c\x16\x43\xe4\xb6\xdb\x76\xed\x22\xc2\xd6\xab\x23\x4a\x38\x6d\x59\x1c\x35\x09\x1b\x67\xc1\x64\x2f\x7a\x51\x13\xe2\xd1\x47\x3a\x4b\xf8\xd0\xd5\x20\x12\x2a\xb3\x8f\xc1\x9d\x25\x64\x9a\xaa\xa2\xac\x95\x43\x09\xfd\xea\x4f\x00\x00\x00\xff\xff\xd5\x57\x8c\x0c\x68\x03\x00\x00")

func stacksCorednsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksCorednsStackYaml,
		"stacks/coredns-stack.yaml",
	)
}

func stacksCorednsStackYaml() (*asset, error) {
	bytes, err := stacksCorednsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/coredns-stack.yaml", size: 872, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioCrdStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd1\x41\x4b\xc3\x40\x10\x05\xe0\x7b\x7e\xc5\x42\xce\x46\xaa\x37\x6f\x8a\x45\xbd\xc5\xb6\x78\x0d\xe3\xe6\x35\x1d\x9a\xce\x84\xdd\xd9\x96\xfe\x7b\x71\x5b\x14\x2d\x24\x3d\xbf\xef\x0d\xcb\xdb\x6d\xfa\x44\x10\x18\xe2\x43\xe1\x9c\xd0\x0e\x71\x20\x8f\xb6\xf1\x29\x9a\xee\x9a\x80\xa8\x29\x78\x34\x2d\xd6\x2c\x6c\xac\x92\x65\xe9\xbc\xca\x9a\xbb\xc2\xb9\x1b\xf7\x8c\x68\x2c\xf4\x1d\xd6\xda\xb3\x3f\x56\xa7\xb0\xe2\x68\xac\x15\xeb\xed\x7e\x46\xfd\xb0\xa1\xbb\xcc\xe7\x5d\x40\x8c\x8b\xd4\x63\xdc\x2d\x34\x19\xa6\xd9\xeb\x6a\x55\x3f\xd6\x6f\xcb\x01\xfe\x89\xa5\x65\xe9\xae\xf6\xe3\xf0\x3d\xa9\xd1\xd5\x67\x7f\xf4\x18\x2b\x9d\xc0\x0e\x1a\xb6\x2c\xa7\xe9\x3e\x38\x58\xa2\x7e\x89\xb0\x67\x8f\xea\x37\xbd\xa8\xdf\xff\x9f\x3a\x2f\x33\x59\x38\x5f\x9e\x8b\x85\xe3\xb4\x7e\x21\xc3\x81\x26\x61\xe9\x28\xd9\x06\x62\xec\xf3\x53\x72\xf7\xfc\xf5\x7f\x93\x8b\xfa\xac\xf8\x0a\x00\x00\xff\xff\xbd\xa2\x21\x22\x73\x02\x00\x00")

func stacksIstioCrdStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioCrdStackYaml,
		"stacks/istio-crd-stack.yaml",
	)
}

func stacksIstioCrdStackYaml() (*asset, error) {
	bytes, err := stacksIstioCrdStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-crd-stack.yaml", size: 627, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\xf7\xaf\x20\xf4\x06\xc8\xdb\x22\xb4\x9c\xb6\xd9\x1a\x01\xbe\x30\x1c\x17\x0d\x90\xc4\x9e\xed\x62\xe8\x95\x41\x93\xc7\x36\x11\x8a\xd4\x48\xca\x89\xd7\xf5\xbf\x0f\xa4\x24\x8b\x72\xe4\x3a\xdb\x30\xec\x26\xb1\x78\x9e\x73\x74\x3e\x1f\x1e\x51\x25\x57\x7c\x6d\x92\x0e\x42\x29\x98\x8d\xfb\x8f\x10\x55\xd2\x82\xb4\x09\xfa\x03\xfb\x67\x84\x18\x37\x64\x29\x60\xa2\x04\xa7\xbb\xe1\x06\xe8\xa3\x49\x90\xd5\x39\x94\x72\x2e\xd7\x1a\x8c\x19\x2a\x69\xb5\x12\x02\xf4\xbd\x62\x90\xa0\x68\xfc\xe9\x53\x54\x42\x48\x6e\x37\x85\x7e\x82\x1e\xc6\x0f\xa3\xf2\x58\x33\x33\x85\x95\x06\xb3\xb9\x01\x41\x76\x09\xba\xec\x99\x52\x94\xf2\x67\xd0\x53\xc8\x94\xb6\x33\xd0\x5b\xd0\x09\xe2\xc6\x72\x85\x2d\x08\x48\xc1\xea\x5d\xf7\xec\xdb\x7c\x74\x37\xba\x1f\xcd\xa7\x5f\x17\x0f\x83\xfb\xd1\x6c\x32\x18\x8e\xbe\x77\xcd\x96\x76\xa9\xc8\x8d\x05\xdd\x15\x8a\x12\x91\x5c\xf7\xae\x2f\x4b\xb3\x2a\xb7\x4b\x95\x4b\x36\xd7\x64\xb5\xe2\xb4\xf4\xa9\x14\x22\x94\x7a\xcf\x07\x77\x77\xe3\x5f\x17\x83\x87\xaf\x55\x02\x60\x45\x72\x61\x87\x3e\x5d\x35\x98\x71\x43\xd5\x16\xf4\xee\x58\x0c\x3e\x99\x12\xa8\x9d\xf3\x14\x54\x6e\x13\xf4\xbe\x29\x5b\xf1\xf5\x84\xd8\x4d\x82\xa2\x18\x2c\x8d\x7d\x80\x71\xa6\xd5\xf3\x2e\xda\xc3\x96\x5c\x12\xbd\xab\x60\xb9\xd1\xb1\x0f\x2a\x5e\x72\x19\x83\xdc\xaa\x00\x6a\x40\x6f\x39\x85\x61\x11\x7c\x95\x30\x6f\xaf\x76\x5a\x13\x2e\x6f\x72\x4d\x2c\x57\x32\x41\x1f\xae\x6a\x87\x32\xa2\x41\xda\xd9\x26\xb7\x4c\x3d\x05\x98\xcb\x34\xf0\x9a\x4b\x0b\x9a\x42\xe6\x44\x45\x9d\xa7\xa3\x9b\xdb\xe9\x68\x38\xaf\xed\xb8\x17\x0e\x58\xca\xe5\x44\x69\x9b\xa0\xcb\xab\x5e\xaf\x17\x86\xed\xda\x64\x22\x88\x84\x41\x7b\x5b\x04\xa9\x1d\x30\xe6\x7a\x6b\x1f\x0b\x17\xca\x76\xcf\xbe\xd5\xe5\x4e\x9c\xf5\x9f\x3b\x9d\x32\x76\xdf\xcc\x01\xb6\xa8\x96\x20\x4b\x10\xa6\xaa\x9c\x17\x27\xc8\xcb\xfd\xd1\x5a\xa8\x25\x11\x8b\x0c\x74\xca\x8d\xe1\x4a\x96\x50\x8c\xce\xdf\x96\x65\xea\x7a\xa5\x2e\x57\xf1\xdb\xf3\x5a\x26\xc1\x3e\x29\xfd\xc8\xe5\x11\xb9\x6b\x7b\x90\x96\x53\x9f\xc9\x23\x98\x8c\xc3\xb3\x05\xe9\xdf\xdb\x7d\xfc\x68\x1c\x80\xe6\xc6\xaa\x54\x83\x51\xb9\xa6\xc0\x60\xc5\x25\x77\x26\x4c\xa0\x58\x6b\xc5\x76\xc3\x35\xcb\x88\xb6\xbb\x4a\xe5\xf5\xc0\x6e\x2d\x6e\xd7\x29\xc7\xfb\x98\xc9\xbd\x38\x36\x96\xd8\x7c\x8f\xd2\x4b\x42\x83\x88\xcb\x53\xaa\x81\x58\xb8\x58\x83\xbd\x10\xdc\xd8\x8b\x27\x62\xe9\xe6\x22\xcf\x18\xb1\x50\xa6\x3a\x25\x99\x29\xd1\x20\x59\xa6\xb8\xb4\xd5\x73\xa6\x58\xf5\xb3\xaa\x77\xf9\x28\x49\x0a\x26\x23\xc1\x81\x62\x50\x63\xa9\x86\xd2\x88\xe1\x0c\x1e\xb9\xa3\xb0\xce\x41\xab\x25\x41\x8b\xa6\x29\x91\x2c\xa9\x65\x08\x63\xa1\xd6\x0b\x95\xdb\x2c\xb7\x0b\x01\x5b\x10\x7d\x06\xcb\x7c\x8d\x30\xd6\x60\x76\x92\xf6\xdf\x6d\x0e\x26\xdb\xd4\x06\x71\xc1\xaf\xc1\x90\x17\x90\xd8\x1d\xef\x51\x20\xb7\x5c\x2b\x99\x3a\xf6\x0d\x54\x27\xe3\x1b\x4f\x6f\xfd\xb3\xff\x1b\x10\xab\xd8\x85\xfa\xa6\x45\xee\xe7\x21\x04\xf9\x7c\x34\x90\xb7\x77\xe3\xf9\x62\xfe\x79\x3a\x9e\xcf\xef\x46\xfd\xab\x60\x2a\x2b\xe1\x70\x30\xfc\x3c\x5a\xcc\x7e\xf9\x32\x98\x7d\xee\x5f\xd5\x53\x9f\x92\x35\x94\x43\x18\x17\x83\x75\xd9\xed\x75\xaf\x02\xea\xf1\x29\x4e\x10\x67\xae\xe1\xed\xae\x08\x96\x82\xb6\x26\x1c\xbb\x82\x8d\xea\xf0\xe0\x39\x53\x06\xc2\x70\xfd\x3c\xc7\x1b\x6b\xb3\xe6\xe1\x65\x2f\x5e\xeb\x8c\x06\x87\xd7\xbd\xeb\xf7\x1e\x78\xe1\xfe\xe0\x54\x49\x6e\x95\xe6\x72\x7d\xc4\x6d\xf7\xe6\xed\xbb\x03\xc7\xab\x5a\x07\x76\x9b\x84\x89\x11\xc6\x4d\x62\x0d\x44\x01\xd3\x34\x14\x2c\xa4\x99\x20\x16\x3e\x71\x01\x81\xe0\x90\xe5\x0b\x02\x5f\x14\xac\xb6\x23\xa9\xe8\xda\x34\x13\x0d\x4b\xed\x74\x19\x40\x1a\xbc\xf9\xaf\xb7\xd0\xed\xc3\x6c\x3e\x78\x18\x8e\x16\xb7\x93\x0a\xc7\xb3\x37\xaf\x6b\x83\x3d\x33\x53\x6e\x09\x03\x51\x78\xd8\xa8\x51\x25\xa9\x6b\xd4\xa8\x8f\x4b\x08\xc9\x32\x90\x0c\x33\x69\xb0\xf7\xb0\xbf\xdf\x44\x9c\xd4\xb5\x08\x76\x4b\x43\xff\x63\xef\xa7\x5e\xf3\x78\xa3\x8c\x75\x2a\xfd\xf2\x2d\x9d\xba\xbc\x62\x85\x0d\x5f\x4b\x60\x98\x92\xa6\xc1\x12\x8b\x8d\x55\x9a\xac\x01\xef\xb3\xd2\xd7\x5c\x61\xb3\x33\x16\xd2\x13\x97\xc8\x93\xe6\x16\x1a\x24\xb4\xa7\x2f\x42\xa9\xca\xe5\xe1\x69\xf1\xd8\x62\xc9\xd1\x26\x03\x01\x16\x10\x83\x4c\xa8\x9d\x2b\xb4\x79\x29\x6c\xb7\xfe\x12\xd0\x22\x69\xb7\xeb\xb9\xba\x60\xe9\x0a\x18\x5c\x01\x7f\x47\x47\x43\x26\x38\x25\x66\xcf\xcb\xaf\xea\x9c\x35\xb1\xf0\x44\x76\x6d\xb7\x7a\x54\xca\xa2\x04\x45\xee\x3d\x5a\x12\x11\x9d\xa8\x4c\xe4\xfc\x2c\xae\xa0\xc0\xdb\x13\x17\x66\xf4\x63\xe5\xb7\xf1\x96\x6b\x9b\x13\x51\xe5\xf8\x24\x9e\x81\xb1\x5c\xfa\x15\x41\xe7\xe2\x15\x0a\x65\xa4\x25\xb0\x38\x5e\x28\xcd\xdc\xce\x67\xac\xca\xf0\x8a\x6b\x63\xdb\xaf\xbb\x56\x16\x76\x03\x63\x12\x74\xf6\x6d\x32\x9e\xce\x67\xdf\x0f\xf9\x33\x6a\x21\xd0\xe8\xaf\x30\xa8\x56\x79\x93\x37\xf1\x36\x78\x88\xde\x45\x0d\xca\x6b\xdd\xab\x03\xc4\xf9\xa5\x39\x47\xff\x3b\x85\xc2\xb8\xb1\xea\x86\xfa\x1f\xae\xbc\x81\x23\x62\x8c\xdb\x17\xe1\x86\x07\x69\xcf\x99\x38\x09\xf4\xfc\x1d\x7c\x01\x34\x6c\x78\x13\x47\xe5\xa7\x6f\x9d\x17\xd7\xd4\xef\x3c\x7b\xe4\xb2\x5c\x99\xc3\x04\x37\xf3\xeb\xf6\x34\xc3\xbe\xb0\xec\x24\xb2\xb9\xc9\x87\x38\xbf\xd3\x47\xff\xe0\xa6\x6a\x14\xfa\xa5\x23\xe1\x0a\x5f\x6c\xf8\x95\x0c\xe4\xf6\x3f\xb9\xda\x30\xba\x9d\xcd\x6f\xc7\x8b\xfb\xd1\x7c\xb0\xf8\xf1\x5b\x2b\x2e\x0b\xe3\x39\xba\x16\xf9\xf9\x70\x97\xa2\x3b\x0b\x57\xc4\x72\xb1\x2e\x87\x1d\x97\x4c\xd8\xf9\x2d\x77\x74\xe1\x49\x0c\xa3\x2d\xd1\xdc\x7d\x9b\x27\xa8\xe5\x53\xb8\xe3\xbe\x5c\x0d\xd5\x3c\x2b\xbe\xe3\xa2\x83\x0f\xe8\x7a\x69\x8e\x3a\x9d\xce\x9f\x01\x00\x00\xff\xff\x87\x77\x60\xa3\x0d\x10\x00\x00")

func stacksIstioStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioStackYaml,
		"stacks/istio-stack.yaml",
	)
}

func stacksIstioStackYaml() (*asset, error) {
	bytes, err := stacksIstioStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-stack.yaml", size: 4109, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksIstioTelemetryStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x7b\x6f\xe3\xb8\x76\xff\x3f\x9f\x82\xf0\x2c\xb0\x33\x40\xfc\x48\xee\x4c\x7b\x23\x20\x7f\x78\x62\x67\xd7\xed\x8c\x13\xc4\x4e\x8b\x76\x71\x21\x30\xd2\xb1\xcd\x46\x22\x55\x92\x72\xe2\x69\xda\xcf\x5e\x90\x7a\x51\x4f\x4b\x99\xcd\x1d\xdc\x5d\xcd\x2e\x66\x1c\xf1\xfc\x0e\xc9\xc3\xf3\xd2\x21\xcd\x38\x8c\x6e\xc8\x56\x58\x27\x08\x6d\x39\xde\x60\x8a\x87\x2e\x16\xbb\x07\x86\xb9\x1b\x70\xb6\x27\x2e\x70\xdd\x8a\x90\xc3\xa8\x04\x2a\x2d\xf4\xa2\x7f\x44\x08\x07\xe4\xdf\x80\x0b\xc2\xa8\x85\xce\xe2\x67\x05\x0c\x42\x43\xe4\x12\x81\x1f\x3c\x98\x81\x07\x52\xd3\x6e\xb0\x27\x20\x6e\x46\x68\xc3\x3c\x17\xb8\x85\x88\x90\x84\xa5\x4f\x29\xf6\xa1\xf8\x8c\x05\x0a\x9f\x72\xd6\xdd\x61\xb9\xb3\xd0\x78\x8f\xf9\xd8\x23\x0f\xe3\x78\x0a\xe3\x74\x0a\x62\x5c\x60\xc1\xb7\x0b\x37\x1b\x2d\x42\xf2\x10\x80\x85\x36\xc4\x83\x9c\x04\x24\x16\x2c\xe4\x0e\xd4\x4d\xbd\x7a\xf2\x08\x95\x90\x91\x08\xb0\xe3\x80\x10\x96\x92\xce\xf3\xc1\x18\x3e\xb8\x44\x2a\xd9\x58\x48\xf2\x10\x8c\x06\x22\x66\xb0\xc1\xa1\x27\x4b\x2d\xff\x25\x18\x9d\x61\x89\x4d\x29\x20\x24\x89\x0f\x0b\x2a\x81\xef\xb1\x67\xa1\x4f\xc2\x68\x8c\x24\x79\xcb\x99\x0f\x72\x07\xa1\xd9\x54\x92\x46\x22\x8f\xa0\x8a\x3a\xe4\x9e\x85\x76\x52\x06\xd6\x78\x9c\x11\x58\x17\x93\x8b\xc9\xc9\x89\x00\xbe\x27\xf1\xac\x63\x31\x46\x23\x04\xba\x27\x9c\x51\x5f\x89\xef\x24\x92\xc6\x2f\x77\xd3\xeb\xe9\x72\x6a\xdf\xde\xdc\xad\x2f\xff\x32\x99\x4c\x92\xe7\xd7\xf6\xf4\x7e\xfd\xab\xfd\x79\xba\x5a\x5c\xd9\xf3\xe5\xf4\xf3\x97\xf9\xec\x32\xd3\x96\x8c\x62\xba\xbc\x59\xfe\xc7\xd7\x9b\xfb\x55\x4a\x95\x4a\xa9\x8a\xe8\xe6\xee\x17\xfb\xee\xe6\xcb\xfc\x12\xbb\x3e\xa1\x19\xd9\xed\x74\xfd\xeb\xca\x9e\x4d\xd7\xd3\xcb\xb1\x5a\xb9\x44\x7f\x34\x05\xf1\xf1\x16\x2c\xe4\x62\x22\x76\x98\x9e\x5d\x5c\x9c\x27\xcd\x96\x87\x25\x08\x99\x51\xdd\x86\x9e\x77\xcb\x3c\xe2\x1c\x2c\x84\xbd\x27\x7c\x88\xc4\x06\xcf\x01\x13\x90\xcc\x5a\x4d\x74\xac\xc4\x97\x68\x54\x62\x77\xaa\xb1\xc1\xf6\xc6\x20\x9d\x54\xb1\xf5\x63\xa5\x74\x84\x6e\x4d\x2d\x2f\xe3\x46\x07\xec\x7b\x25\xee\x99\x76\x36\xb1\x4d\xa9\xcc\xcf\x19\xc3\x3d\xf3\x42\x1f\xd2\xb1\x2b\x1a\xab\x28\x3f\x6d\x76\x43\x09\x1e\xf8\x20\xf9\x21\xa2\xdd\x7a\xec\x01\x7b\x76\x00\xdc\x27\x42\x64\xb6\x3c\x44\x9c\x79\x70\xe9\x78\xa1\x90\xc0\x87\xd9\x2a\xc5\x6b\xa0\x99\x8d\x7d\xf2\x0c\xdc\x3a\x1b\x4d\x46\x1f\x8f\x8a\xde\x61\xbe\x8f\xa9\x9b\xb0\x1f\x0e\xb1\xeb\x72\x10\x22\xfe\x39\xa4\xe4\xd9\x1a\x8f\xc7\x82\x39\x8f\x11\xdf\x91\xfa\x08\x32\xa5\x8f\xd6\x67\x25\x19\x87\xfb\xbb\x2f\x97\x8f\x7f\x15\xd6\x78\x5c\x68\x8d\x4d\x74\x89\x7d\x10\x01\x76\xe0\xf2\xa7\xff\x59\x4e\xbf\xce\x57\xb7\xd3\xab\xf9\xff\x56\x49\x2a\x74\xc5\x30\xea\xc7\xd2\x5d\xd7\x1a\xc8\xcd\x6c\xfe\xf9\xfe\x97\xcb\xad\x23\xb9\xe2\x7b\x5e\xa1\x4e\x17\x93\x8b\xbf\x8c\xa5\x13\x9c\x2a\x95\x1a\xfa\x8c\x12\xc9\x38\xa1\xdb\xb8\xf9\xe3\xf9\xc7\xf3\x73\xdd\x5e\xb0\x65\x41\x5c\x78\x24\xce\x63\xea\x9f\xa2\x95\xd2\x9e\x29\xf3\x29\x66\x5f\xea\xcf\x3b\x34\x44\x67\x9f\x26\x17\x93\xac\x4b\xa0\x7b\x76\x50\x38\xdf\x70\x74\x67\x9f\x26\x93\x8f\x8a\xc6\x78\x76\x31\xb9\x38\xd3\xb0\x2d\x0f\x9c\xf4\x79\x6e\x69\x75\xef\xfb\x73\x63\x71\x4b\x8b\x18\xf1\xca\x3b\x50\xb5\x14\xb1\xe3\xb9\x8a\x74\xc7\x68\x2a\x68\x60\x0e\x24\xc1\x0f\x94\x11\x5f\x47\x7e\x3f\x69\xd0\x36\x61\x8c\x68\xac\xe7\x68\xa7\x3c\xb4\x09\x8c\xa4\x1f\x78\x39\x6e\x2a\x3a\x70\xe6\xdd\x7a\x98\xc2\x34\x94\xbb\x48\x1f\x0d\x92\xe5\xcd\x72\x9e\x89\xb6\xb8\xde\x11\xcd\xed\xcd\xcc\x56\xda\x73\xf9\xd3\x7b\x01\xde\x66\xac\xdc\xf6\x87\x8a\x76\xad\x5d\x26\x91\x56\x3d\x93\x72\xb1\x5c\xad\xa7\xcb\xab\xb9\xbd\xb8\x4d\xe8\x48\x90\x11\x08\x70\x38\x48\x61\x21\xe2\x02\x95\x44\x1e\x22\x57\xe0\x00\x97\x99\xb7\xcf\x29\x6e\x8d\xf2\x9e\xfc\x77\x08\x22\x8e\xc8\x43\xb4\xc7\x9c\x44\xa1\xec\xcb\xe7\x6c\xa0\x27\x08\xb9\x20\x1c\x4e\x82\x28\xf4\x0f\xa2\x55\x11\x07\x21\xc1\x47\xe9\xf0\x07\x27\x27\x8f\xe1\x03\x70\x0a\x32\xea\x34\x6d\x71\x6d\x27\x14\x92\xf9\x36\x87\xc8\x0f\xd9\x2e\x6c\x08\x25\x69\x26\x30\x44\x6a\x69\x88\x33\x8a\x6c\x72\xa4\x3b\x18\x11\x36\xde\x9f\x61\x2f\xd8\xe1\x73\x4d\xc3\x43\x0f\x9a\x29\x32\x33\x69\xa6\xcb\xc6\xd9\x4c\x97\xa8\x58\x33\x15\x96\x92\x93\x87\x50\x82\x8f\x29\xd9\x80\x90\xcd\xe4\x84\x0a\x89\xa9\x73\x8c\xa9\x8b\x03\x09\xbc\x99\x68\x87\xa9\xeb\x1d\x23\xf2\xd8\x16\xa8\x52\xfc\x46\x2a\x21\x5d\xc2\xda\x4a\x0d\xe8\xbe\x89\xd4\x58\xf8\x44\x24\x16\x7a\x19\x6a\x3d\x34\x53\xae\x41\x1d\x8f\x81\x26\x7d\x24\xd4\xb5\xca\xd2\xd5\x6d\x3e\x48\xec\x1a\x19\x94\x91\x6a\x66\xee\x45\x04\xe0\x24\x04\x29\x1b\xc3\x1e\x18\x27\x5b\x42\x47\x24\x30\xf3\xb0\x3d\xf6\x42\x58\xeb\x0c\x6a\x71\x6b\x4f\x67\xb3\xbb\xf9\x6a\x55\x84\x84\xc4\xad\xc1\xac\xd6\x77\x8b\xe5\x2f\x25\x7a\x01\xbc\x1d\x80\x83\xb6\xc8\xd1\x0e\xb0\x99\x81\x57\x82\xec\xaf\xd3\xdb\x12\xb0\xed\xc8\xd2\x8e\x98\x90\xdd\x10\xca\xc4\x58\xc7\x5e\x74\x8e\xdf\x09\xc1\x01\x0b\x46\xbb\x62\x36\xc0\xbb\x4a\x5a\x38\x3b\xf0\xa1\x1b\x46\x32\x89\x3d\x5b\x90\x6f\x90\x4f\xe1\xf3\xea\xb3\x5c\xff\xd3\xc7\x72\x77\x05\xd0\x51\x80\x7a\x2d\xa8\x01\xac\x17\x5f\xe7\xab\xf5\xf4\x6b\x59\x0b\x94\xc2\xe1\x6d\x2e\x3c\x35\xcf\x4b\x04\x8c\x0a\xe5\x93\xdc\xb6\xa3\x8b\x11\x6e\xc8\xb1\x8e\x0b\xd5\xa8\xd9\xfd\xdd\x74\xbd\xb8\x59\x96\x81\xaf\xd0\xf0\x18\xf9\x2a\xe9\xc7\xd8\x0e\xe2\x4f\x7a\xeb\x22\xff\x28\xbe\xb5\xf7\x0f\x09\xbd\xf2\x0f\xe8\x1d\x9a\xcd\x6f\xef\xe6\x57\xd3\xf5\x7c\xd6\x05\x1d\x70\x42\x1d\x12\x60\xaf\x5d\x9f\xae\x8a\xf8\x54\x2f\x5a\xfb\x81\x9a\xa0\xef\xe8\x2f\x60\xbc\x4e\x25\xf3\xe2\x77\x18\xa5\xe0\x68\x0c\xec\x5b\xeb\xb1\x81\x6a\x3b\x31\x03\xc2\xc1\x01\xb2\x07\x77\xf4\x70\xc8\xc5\x89\x76\xc3\xcc\xa3\x6d\xad\xa4\x5d\x79\x08\xa0\xf2\x75\xbd\x67\xc8\xd7\xf5\xdc\xd5\x8c\x0d\xa8\x2f\xbd\xba\xe1\x7e\xbe\xb9\xf9\x52\x2d\x2b\xed\xa6\xc0\xb5\x55\xea\x0f\xdc\xd6\xf1\xbb\xed\x7a\x49\x78\x96\xa3\x80\x33\xc9\x1c\xd6\x52\x07\x13\x94\x32\x66\x21\xb1\x5f\x17\xf2\xcb\x16\x6d\x22\x5b\x83\xde\xa1\x19\x04\x1c\x1c\x2c\xc1\x3d\x45\x8f\x10\x48\xb4\x61\x5c\xbd\x0c\x05\x58\x92\x07\xe2\x11\x79\x28\xf5\xc0\x41\x59\x07\xf0\x91\xc7\x9c\xda\x05\x2c\x4a\x34\x8f\xd4\x29\x53\x27\x81\xa4\xd0\xd6\x9e\x00\x07\x64\x14\xbf\xb0\xb5\x07\xec\xe3\x9c\xaf\x35\x80\x05\xd0\xa8\x90\x15\x90\x6e\x1a\x91\x44\x4a\x1c\xca\x5d\x57\x8f\x96\xc3\xe2\xd0\x25\x40\x9d\x5a\x93\x6d\xee\x57\x25\xd3\xb2\x6b\xca\xa2\xb1\x8e\x87\x89\xff\x8a\x04\x51\x83\x39\x7e\xb2\x5b\x30\x28\x83\x03\x62\x3f\xc2\xe1\x38\x68\x38\xfc\x3b\xe4\xfb\xd9\x1b\x49\xab\x7c\x3f\x0e\x97\x5d\xf2\xfd\x18\xe2\xe1\x07\xa8\x75\x72\x15\xb2\x8e\x61\xc5\x51\xb7\x06\xb6\x77\x87\x06\x40\xbf\x72\x75\x42\xb1\x27\xda\x56\xf5\x62\x44\x62\xf8\xe8\xd5\xc9\x4a\xcc\x61\xea\x38\x2c\x6c\x1b\xd6\xf3\xd0\x96\x2a\x1b\x83\x9e\x18\x7f\xf4\x18\x76\x3b\xe7\x64\x29\xb0\xf3\x62\xe4\x90\x1d\x56\xc5\x4c\x94\xba\x28\xa9\x89\xeb\xaa\xa9\x26\xb6\xbb\xba\x9a\xe8\x0e\xca\x64\xc2\xda\x4b\xd7\x44\xa9\xf0\x85\x09\x05\xfe\x4a\xfc\x77\xac\x4c\x6a\x02\x9d\x2d\xa0\x82\xcb\xeb\x12\xf0\x04\xfc\xba\xb9\x9b\xe8\xef\x93\x41\x87\xe2\x41\x05\xba\x93\x0b\x30\xf1\xdd\x4d\xba\x12\xfd\x3a\xe9\xbd\xc6\xb8\x5f\x1d\x0c\x75\x55\xae\x21\x00\xc6\x05\xc0\x52\xf4\x63\xa1\x0c\x42\x39\x15\xff\x22\x54\x57\xd9\xbe\xda\x6b\xc7\x91\xd4\x10\x1b\x86\x12\x6d\x8f\x7a\x6c\x5b\x1a\x8c\x80\x3d\x70\x22\x0f\x16\xfa\x79\xb0\xa0\x1b\x36\xf8\x39\x6e\xc8\x92\xf1\x5c\xb1\xe3\x24\x11\x65\x54\x8c\x2e\x05\xf0\x45\x60\x65\xa1\x1c\xbd\x20\x12\xbc\x1f\x4c\x46\xfa\xbf\xc1\x87\x02\xed\x34\xc8\x88\x23\xd7\xf8\xdb\x00\x07\xc1\xe0\x6f\xe8\x05\x0d\x06\x05\xe2\xdb\x34\x0b\x2c\xbd\x59\x57\x91\x2f\xf5\xbc\x8d\x00\x5c\x45\xf4\xef\xb1\xba\x58\x95\xc1\xa1\x8e\x6d\xa4\x57\xa5\xe0\x5e\x45\x7e\xa3\xdd\x6e\x2e\xa2\xe7\xc9\x0c\xe5\xd5\xd2\x28\x47\x8b\x4a\x91\x18\x64\x8b\x02\xaa\x41\xea\x06\xd9\x2a\xb2\xf2\x5f\x95\x8b\xa8\x75\x1e\xb5\x7d\x66\x72\xab\x35\xbe\x5a\x6c\xb4\x30\x45\x77\xdf\x48\x1e\x0b\xbc\x32\x44\xd4\x02\x63\xd1\x97\x82\x60\x2d\xc0\x50\xb0\xca\x7a\x4a\x1e\x88\x03\x72\x15\xa5\xe8\x75\xb9\x7b\x89\xfe\x5f\xe1\x60\x15\x73\x75\xf4\x52\x2c\x2a\xff\x36\x78\x1e\xe2\x80\x0c\x1f\xe1\x50\x5c\xf5\xf4\x1d\xaa\x50\x1e\x45\x2f\xa5\x17\x6f\x05\xdc\x49\x19\x64\xe0\xb8\x30\x5c\x28\x14\xe7\x3b\xd0\x07\x10\xcc\xaa\x70\xbe\x39\xa9\xba\x5d\x31\x17\xac\x7c\x59\x12\xbd\xa0\x49\x89\x6e\x45\xbe\x99\x74\x82\x7c\x2b\xd2\xe9\x9e\x12\xb2\xac\x04\x5b\x45\xb5\x30\xc6\x6e\x88\x2a\x7e\x34\x24\x6e\x51\x5a\x8e\x47\x80\xca\x35\xc7\x0e\xd4\x60\x23\x8a\xa1\xde\x02\xae\x60\xe0\x61\x09\xd4\x39\x58\xe5\x72\xaa\xa2\x9b\xf8\x62\x60\xbe\xb0\xc7\xd5\x13\x5b\x80\x13\x2a\x87\x6a\x07\xf1\xa6\xb9\xc3\xa8\xab\x77\xd3\xb0\xf7\xfe\x7d\x65\x51\x40\xb1\x23\xf4\x81\x85\xd4\x1d\x7c\x40\x97\x97\x68\xc0\x42\x19\xfd\x78\x8a\x06\x21\x7d\xa4\xec\x89\x0e\x4e\x73\x9c\x0a\x25\x1e\xf4\x12\x1d\xfa\x39\x45\x03\x3f\x94\x21\xf6\x6c\xe9\x09\x85\xa6\x8c\xc2\xe0\xc3\x87\xa2\x34\xc1\x5d\xe9\xda\x4e\x64\x8d\xc7\x8a\x3f\x05\x2d\x11\xc0\xa7\xba\x7c\x5d\xae\x68\x57\x2b\xcc\xda\x8c\x25\x46\xe5\xd6\x20\x8c\xca\x73\x9f\x75\x75\xad\xa2\x92\x9f\xd3\x08\xf5\x56\x9e\x52\x96\xca\xce\x05\xe5\x89\x36\x1d\x8a\xbb\x10\xf9\x71\x2a\x4b\x99\x86\x72\xc7\xa2\x48\x58\x52\x15\x0b\x27\x8d\x5a\x47\xcc\xdd\x99\x3c\xa3\xe7\x6b\xc6\x9f\x30\x77\xc1\xbd\x66\xbc\x52\xe7\x36\x09\x81\xfa\x14\x69\x5c\xe2\xa8\x8d\x41\x47\xca\xf1\xfd\xba\x13\x05\x1e\xf5\xc9\x70\x69\x69\x44\x88\xcf\x34\x80\x9b\xed\xfd\x46\xa7\x93\x7e\x1e\x44\x07\x49\xe2\x64\xe0\x2d\x33\x13\xe9\x04\xdf\x97\x9c\x98\x25\x40\xf4\x92\xb5\xbc\x1f\x9c\x4f\xce\xfe\x79\x38\x39\x1b\x4e\xce\xd6\x93\x89\xa5\xff\xff\xcf\x74\xee\x15\x09\x4c\x66\x05\x73\x5d\xd4\x2e\x95\xb9\xab\x22\x7c\x9f\xef\x98\xe4\x7d\xbe\x53\xc2\xfe\x41\xf2\x9d\x2c\xf7\xa8\x4a\x35\xa4\x13\x54\x05\xc3\x59\xb2\x6f\x51\xb5\x99\xf1\xe7\x0e\xa2\x85\x88\x57\xbb\x55\x55\x17\xf8\x2a\x77\x97\x72\xc4\x3a\x22\xde\xb5\xec\x26\xda\x97\x2a\xe3\x57\x47\x7a\xac\xc0\xfd\x61\xa2\x17\x0f\xe3\xb3\x6b\xd5\x91\x2b\x7b\xfd\x37\x43\x96\x8f\xa5\xb3\xab\x30\x12\x35\x37\x9d\x90\xa3\x97\x8a\x6c\x5d\xb5\x6e\x79\xe0\x24\xfa\x81\x9d\xdc\x41\xec\xf4\x30\x51\x5a\x54\x18\x65\xbd\xab\x3f\xc9\xb1\xa5\x8a\x33\xd1\x1e\xdb\x8e\x72\x71\xf8\x4d\xe5\x91\x1c\x4c\x6c\x2b\x12\xc3\x71\xfc\x2e\x73\x36\xd3\x89\xdf\x69\xda\xd1\xe9\xb7\x86\x89\xc7\xd6\xae\xeb\x65\xa5\xc9\xeb\x9a\x93\x85\x06\x67\xc9\x34\x5d\xe2\x03\x15\xf9\x63\xf6\x7f\x2f\x93\x49\xc2\xb4\xfd\x74\x34\x11\x48\x1c\x66\x1d\xd2\xa6\xa5\xcc\xa0\x5c\x7c\x6b\x62\x14\x34\xe7\x37\x75\x30\xdc\x94\x43\xd5\x81\x92\x0d\xce\x22\x30\x7e\x5e\x03\x36\x24\x68\x08\xac\x31\x03\x68\xc5\xc3\x14\x5d\x73\xf1\xf2\x28\xcb\xa0\x45\x0c\x6f\x64\x80\x8f\x26\x61\x8d\xf0\x54\xb0\x55\x2c\xda\x4b\x37\xad\xda\x37\x65\x66\x6d\x38\x44\x47\x15\x6a\x0b\xea\x9d\xd8\x54\xac\x50\xa9\x38\x5f\xc9\x30\xf6\x07\x76\x96\x32\x99\x1b\xe0\x35\xc5\x9a\x0a\x2e\xd1\x9b\xad\xed\x54\x56\x5b\xce\x27\x93\x7f\xb8\xc4\xa9\x21\x62\xdf\x2f\x57\xb7\xf3\xab\xc5\xf5\x62\x3e\xfb\xde\xb0\xdd\xd6\x5f\x27\x79\x68\x9d\xcb\x3e\x56\xf5\xe9\x1d\x79\xef\xc8\x7b\x47\xde\x3b\xf2\xde\x91\xff\x60\x47\x2e\xc8\x37\xa8\x77\xe2\x95\xbb\x0a\xbd\xef\xee\x7d\x77\xef\xbb\x7b\xdf\xdd\xfb\xee\x1f\xe7\xbb\x23\x51\x36\x3b\xef\xea\x9d\xe3\xde\x7b\xf7\xde\xbb\xf7\xde\xbd\xf7\xee\xbd\xf7\x8f\xf2\xde\xd2\x09\xf4\xf6\x0f\xd4\x57\xbc\x8f\x6d\x50\xf5\x4e\xbc\x77\xe2\xbd\x13\xef\xe0\xc4\x3b\x7b\xdf\x1f\xed\xc4\x7b\x9f\xfa\x1a\x9f\x9a\xec\xcb\xb7\xf0\xab\xb5\x27\x05\x7a\xdf\xda\xfb\xd6\xde\xb7\xf6\xbe\xf5\xcf\xe2\x5b\x0b\x37\x70\x75\xfb\x3a\x4e\xe4\x98\x8d\x73\x27\xf9\xe2\x72\x74\xc2\x29\x15\x7c\x72\xea\xc4\x2e\x9f\xfd\x18\xc5\xf7\x24\x95\x2e\x29\xcb\x06\x7a\x75\x73\xbf\x5c\xcf\xef\xd2\xa7\x5a\x8d\x23\x4d\x30\x4f\xb1\x24\x8b\x65\x3c\xca\x5c\x53\xf9\x61\x6a\x8a\xe5\xa6\xc4\xde\xeb\x5b\x32\x3d\x2c\xd3\xc4\xd6\x65\x34\x14\xec\xba\xa6\xa5\x6a\x40\x55\x5e\xea\x48\x73\xe5\xd0\x2a\x5c\x43\x4d\x6b\x6c\x49\xcd\xad\xba\x8f\x16\x24\xc5\x61\x14\xdf\x50\x73\x4d\xc6\x6b\xa7\xf1\xbc\xde\x66\xab\x55\xcf\x4e\x36\x9e\x15\x39\xa3\xae\x38\xa2\x84\x09\x79\x0b\x3d\x9c\x2d\x56\xeb\xbb\xc5\xe7\xfb\xdc\xad\x11\xbd\x32\xf6\xca\x68\x5e\xab\xf7\x10\x3a\x8f\x20\x73\x5f\x57\x86\xe7\xc0\x23\x0e\x91\x76\x45\x1b\x42\x3a\x82\x08\x0b\xfd\x36\x19\x4d\x26\x9f\x4e\xd1\x64\x34\x39\xd3\x7f\x9f\x47\x3f\xe8\xbf\xf5\x93\xe8\xc1\xa7\x53\x74\x76\x8a\xce\xd5\xbf\xea\xe3\xe4\x6f\x35\x76\xa0\xd3\xdb\x23\xca\x2f\xc8\x37\xe8\x15\xbf\x57\xfc\xb7\x53\x7c\x46\x81\x4a\x82\xbd\xcf\x55\xaa\x4f\x43\xff\x9a\x50\x22\x21\x69\x45\x7f\xcd\xb5\x0b\x07\x7b\x90\xbf\x08\x18\xa1\x2d\x67\x4f\x72\x77\x8d\x1d\xc9\xb8\x85\xce\x26\x25\xf5\x8f\x67\x70\x44\xff\xb3\x8d\x94\xde\x00\x7a\x03\x30\x9a\xfe\xd1\x0d\x40\x3a\x81\x2d\x80\xc6\x01\xa0\x39\x11\x37\x2a\xd2\x7d\x1e\xfe\x27\x32\x80\xd6\x49\xb5\x52\xa6\xa4\x60\xd6\x41\xa1\xd2\x1a\x5b\xaf\x54\xbd\x52\x39\x6f\xfb\x0d\x9a\x80\x33\x3f\xbd\xbf\xfe\x47\x7c\xa9\xa8\xe2\xb7\x12\x54\x7e\xcb\xa6\xa2\xea\x51\x6e\x2d\xbc\x8e\x96\x09\x8c\x8c\xa5\x22\x6c\x15\x5b\xdf\x52\xe8\x6f\xfa\xad\xa5\xb6\x42\x2d\x47\xb0\x72\x63\xc1\x1b\x7d\x9f\x60\x72\x57\x46\x37\x48\xa8\xae\x70\xf6\x0e\x3d\xed\x80\x22\x1e\x52\x4a\xe8\x16\x6d\x38\xf3\x91\xbe\xea\x1f\x71\xc6\xe4\x29\x0a\x05\x20\xb9\x03\xb4\x61\x9e\xc7\x9e\x14\x49\x34\x2a\x84\x37\x12\x38\xc2\xae\xab\x9e\xe1\x94\x9b\x38\xf8\x0f\xca\xc8\x90\x47\xe8\x23\x92\x0c\x61\x63\x88\x09\x76\x43\x3c\x40\x7b\x92\x0e\xf1\x5d\x0a\xff\x09\x79\x14\x0d\x05\xfa\xbf\xf1\x48\xc1\xc6\x31\x40\x8f\x68\x1c\xdf\xd8\x3d\xce\x18\xea\x8f\x11\x4d\x89\x55\xd6\x64\x47\xbf\xff\x64\xd0\x82\xcb\xe0\x4d\xd5\x54\xf5\x83\xa5\xe4\x5b\xa0\x8a\x32\xa5\xce\x5d\xab\x77\x54\x17\xcb\x4b\x5e\xab\x8e\xd9\x1d\x7d\xa3\xc2\x4d\x7e\x6f\x35\x45\xe9\x04\x6d\x66\xf9\xbb\x19\xe6\x8f\x15\x46\x81\x4f\xcd\xbd\x4d\x69\xbf\x15\xd6\x77\x8b\x85\xd0\x06\xa6\xfc\x29\xe1\xe0\x66\xe4\xfa\x57\x86\x28\x13\x52\xcd\xb1\xd6\xc6\xb8\x38\xfa\x87\x24\xdb\x98\x0b\x49\xee\x1e\x98\x98\x82\x34\xdd\x6c\x80\xde\x21\x37\xfa\xe5\x1c\xaa\x97\x90\xaa\x91\x91\x0d\x01\x17\x91\x40\x59\x76\xd2\x9b\x19\x71\x75\x97\xe6\x56\x47\xa1\xdf\x5c\x92\xc1\x78\xe1\x8b\xfa\xea\x89\xb1\xc5\x99\x4e\xd5\x7e\x20\x54\x39\x12\x63\xbd\xde\xa1\x6b\xe2\x79\x7a\xee\x14\x9e\x0c\x21\x46\x3e\xca\x90\x89\xf2\xfe\x6e\xe8\x80\x1b\x5f\xca\x35\x32\x78\xfc\xc4\x42\x19\xdd\x1f\x22\xb4\x33\xa2\xa9\x6a\x20\xb6\x41\x37\x9a\x7e\x1d\xff\x0e\x02\xe4\x83\x10\x78\x9b\xe5\x10\xa9\xe0\x2c\xcd\x67\x94\x24\x73\xcc\xb5\x8f\x5e\x13\xa1\x6f\x4e\x2b\xc1\x62\x61\xd5\x6c\x3f\x26\x57\x0b\xe6\x60\xd1\x33\xf4\x82\xc0\x0f\xe4\x61\x25\x39\xa1\xdb\xaf\x38\x78\x5f\xea\x30\x52\xb6\x62\x8f\x47\xb6\x69\x8d\x3b\xd6\x72\xd0\xdc\xc6\x55\xac\x24\x25\x6c\x74\x1f\x61\x0e\x97\xde\x56\x50\xd7\x5f\xe1\x66\xba\x1c\x38\xc9\xe6\x70\xd4\x78\x74\xec\xb9\x5b\xea\x72\x9c\xd2\xfc\xf4\x88\xc0\xf3\x37\xd5\x55\xb3\x68\x3d\x8a\x1a\x51\x96\x73\xe5\x63\xbb\x8b\x99\xc6\xe5\xad\xa9\x51\xed\x0a\x36\x59\xc3\xa0\x4e\x1e\xe5\x6d\xd9\x0a\x06\xc7\x55\xd1\x64\x63\x88\xb4\x38\x8a\x36\x5b\xac\xc5\x0b\x28\xcb\x9c\x52\x82\x76\xfc\x8a\xcb\x63\xb2\x6a\x56\x77\x93\x8b\xa9\xf3\x26\x87\x7a\xc5\xaf\xd8\x17\xce\x6b\x7f\xd5\x0b\xcd\x51\x13\xa8\x3c\x0f\x50\xbd\xee\x47\x8d\xa1\xf6\x6c\x41\x13\xb3\x6e\x23\x6b\x12\x7e\x0b\x03\x51\x01\xfa\xff\x03\x00\x00\xff\xff\x10\xfa\xeb\xb1\x84\x6f\x00\x00")

func stacksIstioTelemetryStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksIstioTelemetryStackYaml,
		"stacks/istio-telemetry-stack.yaml",
	)
}

func stacksIstioTelemetryStackYaml() (*asset, error) {
	bytes, err := stacksIstioTelemetryStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/istio-telemetry-stack.yaml", size: 28548, mode: os.FileMode(420), modTime: time.Unix(1547228767, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksLocalstorageStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x51\x8b\xd3\x40\x10\x7e\xcf\xaf\x18\x82\x70\x2a\x97\xe6\xf4\x49\x16\x7c\xa8\xd7\x16\x85\xbb\xb6\xd8\x53\x1f\x44\xc2\x34\x99\xb6\xeb\x6d\x66\xc3\xee\x24\x20\xea\x7f\x97\xdd\xa4\x69\x7b\x70\x3e\x25\x33\xdf\x37\xbb\xb3\xdf\x37\xf3\xd8\x6e\xc9\x31\x09\x79\x95\x00\xd4\xc8\x7a\x47\x5e\x14\xfc\xc9\x12\x00\x00\x6c\xf4\x57\x72\x5e\x5b\x56\xe0\xc5\x3a\xdc\xd3\xe4\xf1\x9d\x9f\x68\x9b\x77\x6f\x22\xe3\x51\x73\xa5\x60\xd3\x63\xb7\x06\xbd\x8f\xe9\x9a\x04\x2b\x14\x54\x31\x02\x60\xac\x49\x81\xb1\x25\x9a\x21\x83\xcc\x56\x50\xb4\x65\x7f\x24\xc1\xf1\x8e\x32\x9c\x33\x39\xf5\x16\xee\xd3\x3e\xab\x68\x87\xad\x91\x2c\xc2\x0a\x52\x71\x2d\xa5\xb1\xb6\x71\xb6\xd3\xa1\x4d\x72\x0a\x1c\x72\x79\x20\x17\x8a\xe2\x85\x59\x83\x72\x88\xb4\xce\x9a\xb6\xa6\x0f\x9a\x2b\xcd\xfb\x7b\x5b\x91\x82\x6f\xa8\x65\x61\xdd\x42\x3b\x2f\xb7\x96\x7d\x5b\x93\x8b\x5c\x17\xba\xd0\xf5\xda\x1a\x5d\xfe\x52\x30\x23\x43\x42\x49\x52\x5a\xde\xe9\x7d\x6c\xb9\xff\xed\x9b\x2f\x2d\x0b\xf1\x49\x38\x80\xdf\xe3\xa3\x52\xb6\x15\xad\x51\x0e\xf7\xd8\xa4\x0a\xbe\x8f\xc0\x39\x69\x24\xa6\x0a\xd2\xd9\x7c\x31\xfd\x72\xf7\x50\xac\xa7\x0f\x1f\x8b\xc5\xea\x73\xb1\x5c\x2d\x8b\xbb\x4f\x9b\x87\xf9\xac\x58\xae\x66\xf3\x4d\x7a\x7d\x59\x18\x5e\xe8\x9f\x9c\x1d\x81\xbc\x43\x97\x1b\xbd\xcd\x07\x51\x72\x17\xac\x8b\x32\xf8\xf4\x82\xfc\xe3\x2c\xfa\x9b\x3c\xcd\xf6\x19\x83\x5b\x32\xa3\x5d\x25\x8a\x18\x0a\x32\x97\x8e\x50\xac\x53\xc0\xd6\xd5\xc8\x89\x27\xd7\xe9\xb2\x9f\xa9\x93\x05\xd9\xb9\x4b\x83\x6a\x75\x8d\x5c\xf5\x41\xf6\x0c\x75\x00\xb3\xac\xa2\x6d\xbb\x1f\x22\x2f\xe8\x64\x44\x7a\x27\x86\x30\x27\x29\xf3\x3e\x33\x7c\x26\x3f\xbd\xe5\xa3\x4d\xd1\xbd\xa3\x77\xff\xe3\x12\x77\xda\x59\xae\x83\xad\xc3\xd1\xeb\xd5\xac\x58\x4e\xef\xe7\x9b\xf5\xf4\x76\xfe\xfe\xc5\x4b\x4f\x66\x97\x87\xd1\xf6\x0d\x96\xf4\x2a\xb2\xf6\xc6\x6e\xd1\x14\x0d\xb9\x5a\x7b\x7f\x1a\xef\x0c\x82\xbb\x7e\xf8\x6f\xc2\x56\xf9\x30\x32\xbd\x19\x71\xd6\x8e\xe0\xd5\x6b\x20\xae\x1a\xab\x59\xfc\xd5\x29\xf7\xb4\xe6\x02\xb3\xd5\x18\x46\x37\xe8\xba\x41\x29\x0f\x40\x1d\xb1\xf8\x51\xb5\x8b\x15\x3e\xdf\xb6\xa1\x33\x5d\xe3\x9e\xc6\x15\xca\x9f\x31\xaf\xbb\x99\xdc\x4c\xde\x26\xff\x02\x00\x00\xff\xff\xdc\x03\x0d\x3a\x3d\x04\x00\x00")

func stacksLocalstorageStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksLocalstorageStackYaml,
		"stacks/localstorage-stack.yaml",
	)
}

func stacksLocalstorageStackYaml() (*asset, error) {
	bytes, err := stacksLocalstorageStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/localstorage-stack.yaml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksNfsStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x46\xa8\x47\x9c\x28\x55\x0f\xcd\x4a\x39\x44\x91\x2b\x72\x28\x20\x40\xa8\x37\x34\xd8\x03\x8c\x58\xef\x3a\xbb\x63\x27\xa8\xed\x7f\xaf\x76\xcd\x87\x1d\x40\xaa\x6f\xb3\xf3\xde\xdb\xf9\x78\xeb\x5d\xb5\x22\x67\x48\xc8\xab\x1e\x40\x81\x86\xd7\xe4\x45\xc1\x9f\xa4\x07\x00\x80\x25\x2f\xc8\x79\xb6\x46\x81\x17\xeb\x70\x43\x77\xbb\xef\xfe\x8e\xed\x7d\xfd\x10\x11\x3b\x36\xb9\x82\x59\x93\x7b\xd1\xe8\x7d\x3c\x2e\x48\x30\x47\x41\x15\x23\x00\x83\x05\x29\x30\xeb\x26\x5b\x3a\x5b\x73\x50\x25\xd7\x1c\xf6\x3c\xb9\x9a\xb3\xa6\x0a\xb3\xf6\x49\x1b\x11\x29\x5c\xe0\x86\x14\xbc\x55\xb8\x0f\xb7\xd3\x87\x90\x33\xa8\x97\x87\xaa\xee\x03\x29\xd3\x4c\x46\x3a\x5c\x8d\x42\x5e\xa2\x02\x99\xba\x91\x4a\x60\x32\x1d\x2f\x5e\x67\xaf\xe3\x51\x3a\x5d\x8e\x9e\x7f\xa6\x4f\xc7\xc2\x12\x18\xfd\x98\x2d\x67\xe9\x74\x91\x4e\x9f\xbe\xfc\x3e\x07\xcb\xe1\x78\x36\x0f\xd0\xbf\x2d\xdc\xe4\x79\x3e\xec\xa2\xd2\x5f\x93\xf1\x74\x1e\x13\x0d\xb0\xb6\xba\x2a\x9a\xb6\x02\x2b\x8e\xe4\xbe\x0c\x23\xf5\x42\x46\x0e\xe9\x98\xdd\x68\xbb\x42\xbd\x2c\xc9\x15\xec\x43\xf9\x27\xd6\x86\x64\xa0\xd9\xcb\xe0\x1d\x25\xdb\x0e\x32\x47\x28\x34\xc8\x49\x93\x10\x5c\x17\xbb\x20\x55\x65\x8e\x57\xd0\x99\x46\x2e\xae\x53\x3e\x2f\xfc\x10\x66\x61\xc7\xa7\x5b\x0e\xb5\x34\xea\x83\x32\xf2\xa8\x26\x23\x87\x45\xff\x6f\x33\x5d\x01\x93\x97\x96\x8f\x1a\x8e\xbc\xa0\x13\x05\xa8\xdf\x71\xef\x7b\xf1\xd0\x73\x4e\x3b\xce\x76\xfe\x68\x30\x36\x2c\x49\x67\xda\x2d\xd7\xe4\xc8\x7e\x8b\xe6\xe1\xf1\xf1\x6b\xcb\x28\x6d\x73\x84\x2f\xb3\x45\x81\x26\x3f\xb3\x13\xe8\xfb\x6d\xbf\x1d\x26\x59\x27\x2c\x6c\x65\x04\x12\x09\x96\xfd\x06\xd7\xfd\xa2\x6e\x1a\x04\x2e\x8d\x70\x56\xbf\x68\xe5\xa6\x79\x94\xdf\xa2\xa3\xfc\x04\x2c\x1d\xd7\xac\x69\x43\xb9\x02\x71\x15\x9d\x87\x61\x58\x5e\xac\x11\xe4\xf8\xee\xba\xb9\x30\xa8\x49\xa5\xf5\xc4\x6a\xce\xf6\xe7\x61\xbf\x55\xe4\xa5\xd9\x5f\x02\x35\x3a\xc6\x95\x26\x05\x57\x3a\xed\x01\xe4\xe4\x33\xc7\xa5\xc4\xff\x45\x7f\x68\xbd\x84\x77\x0f\x76\x1d\xf0\x10\xde\x38\xb9\xfe\x2d\x9d\xd6\x68\x2e\xa4\xd2\x8f\xd2\x3a\x81\x12\x65\xfb\x49\xed\x5f\x00\x00\x00\xff\xff\x7c\xd3\x96\x06\xc1\x04\x00\x00")

func stacksNfsStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksNfsStackYaml,
		"stacks/nfs-stack.yaml",
	)
}

func stacksNfsStackYaml() (*asset, error) {
	bytes, err := stacksNfsStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/nfs-stack.yaml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksPrometheusStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x18\x34\x05\x6c\x6f\x23\x39\xe9\x9f\x3d\x54\x41\x51\xf4\x0e\x05\xae\xb8\xbb\xbd\x00\xdb\xb7\x5e\x57\xa0\xc9\xb1\xcd\x86\x22\xb5\xe4\xc8\x8e\xb1\xd9\xef\x7e\x20\x29\xc9\xb2\x63\xc7\x8e\x9b\x6e\xae\x7b\xc9\x43\x6c\x4b\xe4\xcc\x8f\x33\x3f\xce\x90\x43\x72\xa3\xc7\x72\xe2\xb2\x23\x80\xd2\x9a\x02\x69\x8a\x95\x4b\xe2\x53\xff\x10\x80\x1b\x4d\xa8\x29\x03\xb8\x4e\xc2\x03\x80\x89\x32\x23\xa6\xb2\xfa\x17\x80\xe3\x96\x95\x98\x4b\x4d\x68\x67\x4c\x65\x70\xf6\xca\x1d\xad\xbc\xea\xa8\xf1\x7f\x09\x7c\x31\xa3\x5c\xb3\x02\x33\xe8\x49\x47\xd2\x24\x05\xba\x69\xaf\x95\x78\x0c\xff\x9e\xa1\xb5\x52\x20\xd0\x14\x6b\x85\x20\x70\xcc\x2a\x45\xc0\xb4\xa8\x05\x03\x31\x3b\x41\x72\x30\xb6\xa6\x00\x9a\x4a\xe7\x25\x03\xce\xd0\x2e\xe0\x15\x38\xe4\x46\x0b\x97\x6e\x47\xda\x02\x05\xb8\xac\x46\x68\x35\x12\xba\xdc\x89\x75\xc4\x1e\xb3\x35\x0a\x33\x40\x2d\x4a\x23\x35\x2d\x3b\x02\xf8\x91\xb8\x92\x71\xec\xb4\x6f\x9f\xaf\x3e\x4a\xe0\xe9\x6f\x3f\xbd\xfb\xd7\xfb\x9f\x2f\xde\xfd\xed\xfd\xef\xed\x2b\x8b\x8a\x8d\x50\x6d\x52\xeb\x4c\x65\x39\xe6\xe1\xbd\xcb\xe0\x53\x9e\x17\x48\x2c\xef\xc2\x45\x3b\x93\x1c\x83\x41\x4f\xe0\xe6\xfb\x06\x72\x5e\x1a\x4b\xa1\xd5\xe7\x0e\x26\xc6\x49\x1a\x9d\xc1\x25\x62\xd9\x79\x6c\x71\x82\x57\x19\x44\xef\x10\x2a\x2c\x90\xec\xe2\x7c\xc9\x92\xa3\xc6\x55\x3f\x47\x57\x44\xe8\x30\x36\x16\x50\xcf\xcc\x02\x1c\xb1\xd6\x4a\x2b\x1e\x0f\xaf\x93\xf0\xba\xb7\x97\x6b\xbc\x6a\xc9\x5d\x5e\x32\x9a\x66\x30\x0c\x3d\x87\x37\x90\xec\xed\xc2\xd2\x88\xfb\x31\x7c\x69\x82\x16\x62\x52\xa3\x3d\xc4\xba\xbd\xf4\x87\x24\x5a\xc3\x8f\xa6\x77\xab\x72\x26\x84\x45\xe7\xf2\x7c\x93\x8b\x3d\x12\xa6\xb5\x21\xe6\xd5\xe5\x4b\xdb\xe4\xd2\x04\x60\x9b\x30\x59\x2c\x15\xe3\x78\x13\x56\xff\xd3\x2f\xd9\xe7\x67\x83\xfe\xdb\x2c\xfb\x8f\x78\x36\x78\x7b\xde\xf7\x1f\x2b\xed\x42\xcf\x22\x04\x86\xa7\x67\xd9\xd9\xab\xd3\xd7\xa7\x9d\xf7\x71\x5a\x46\xf4\x19\x74\xb0\x77\x46\xd8\xa0\x08\x8d\x0a\xb6\xc1\x3a\x9b\x87\x19\xfd\xd5\x4f\x3b\x80\xf6\xf1\x55\x3b\x47\xf7\xb3\xc4\xea\x08\xda\xce\x77\xa6\xc7\x36\x3e\xec\xd2\xd8\xf4\x5d\x9b\x03\xf9\x56\xbe\x1e\xc3\xfb\x2b\xae\x2a\x81\xe0\x4c\x81\x60\xc6\x21\x72\xc6\x99\x58\xcf\x1f\xa0\x29\x23\x98\xb2\x19\x42\xc1\x9c\x93\x33\x04\xce\xac\x90\x9a\x29\x49\x8b\x8e\xa4\x8f\x3e\x90\x2a\xe9\x08\x0a\xb6\x00\x8d\x28\x80\x0c\x8c\x10\x4a\x5b\x69\x14\x30\xae\x2c\x4d\xd1\x42\x61\x66\x52\x87\x29\x3f\x67\x56\x9c\x00\x73\x20\xf5\xd8\xd8\x02\x45\x47\xda\x68\x01\x25\x5a\xff\x98\x69\x8e\x75\xf4\x66\x8a\x8d\xa4\x57\x0b\x84\x8e\xa4\x9e\xa4\xb7\x98\x16\xb8\xaa\x1c\xa1\x0d\x16\x81\xcf\x1b\xe6\x51\xdf\x54\x34\x32\x95\x16\xd7\x52\xc7\xcf\xce\x14\x08\xf1\x62\x90\xfe\xd0\xdb\xe0\x07\x61\x4d\x79\x9b\x66\xe2\x65\x5e\x5a\x1c\xcb\xab\x3f\x56\xaf\xb7\x3e\xfa\xa8\x52\x4f\x9d\xcd\xda\xd3\x67\x83\x43\x84\xe7\xc1\x90\x79\xbe\x51\x68\xa0\x4c\x4e\xca\x1d\x06\x7c\x1f\xd9\xbc\xcc\x85\x99\x6b\x47\x16\x59\xf1\xcd\xd4\x4c\x89\xca\xbc\x1f\x9c\x70\xcd\x44\x21\xf5\x81\xae\xd8\x43\x55\xc3\xcf\xbe\x1a\x5d\x5b\x9f\x27\xaf\x47\x32\x70\x82\xd0\x6a\xa6\xae\x0b\x76\x75\x6d\xac\x9c\xf8\xa9\xb6\x1b\xc5\x86\xe5\x51\x69\x94\xe4\x8b\x87\x5d\x20\x1d\xaf\xe4\xe1\x46\x99\xf3\xa1\xa1\x37\xac\x5f\x75\x11\x3a\x3e\xc5\x02\x57\xdb\x79\x9f\xf4\xd2\x07\x58\x73\xfd\xf3\xaf\xf9\xf7\xb7\xec\x8a\x5e\x3f\xf7\x46\x4b\x0a\xa3\x25\x19\x2b\xf5\x64\x3b\x4b\xda\x65\xda\x23\x51\x0e\x26\xca\xf7\xc7\x92\xe5\xe2\x7c\x0f\xa2\x94\x52\x19\x7a\xa4\xc7\xc1\xf4\xf8\x3e\xe3\x88\x77\xfa\x3e\xec\x98\x30\xa5\xf0\x31\x7a\xfc\x9f\xd1\x23\x7a\x7d\x0b\x3f\x8e\x1b\x17\x77\xf6\xf7\xef\x2e\x3e\x80\x87\x85\x76\xe3\xfe\x7e\x09\x2e\x61\xa5\xac\x1b\xf6\xfe\x70\x6f\xd4\x8c\xe8\x90\xce\x13\x25\x03\x3f\xce\xa5\x50\x52\x2e\xef\xd6\xbb\xe2\x1f\x67\xf9\x58\x7a\x14\xc3\x19\xb3\x43\x5b\xe9\xa1\x43\x6e\x91\xdc\x70\x89\x3e\x95\x66\x58\x3b\x87\x71\x6e\x2a\x4d\x43\xce\x52\x6e\x97\x1a\x47\xc8\x2c\xda\x9c\xcc\x25\xea\x83\xe4\x85\x9e\xff\xfb\x34\x5a\x8a\x39\xef\x1a\x77\x13\x75\xb4\x11\xe8\xa0\xef\x7b\x28\xa4\xc1\x0e\xfa\x84\xd6\xbd\x3f\x8f\x07\xf7\xa4\xbe\x1f\xf6\x3e\x5e\x3f\xa4\x84\xe2\x65\x6f\xae\xa1\xec\x2e\xda\xac\x15\x7e\x3a\x03\xaf\xe7\x5a\xea\x66\x3c\x7b\xf9\xf2\xc5\xdd\x2a\x33\x1e\xd1\x3a\xe1\x9a\x4a\x54\xba\x52\x77\x5a\x87\xd8\xcd\x14\xdb\x71\x0e\x59\x29\x87\xb3\xb3\x61\x60\xd3\xf0\xe9\x6f\x67\xbf\x0f\x4b\x6b\xae\x16\x4d\x36\x69\xe9\x7a\xb3\x92\xf9\x8f\xc8\x53\xe0\xef\xc4\x4c\x3a\x63\x9b\x9c\x72\xdc\xf6\x09\xb5\x12\xe9\xc0\xe2\xaf\x95\xb4\x28\xda\x6e\x71\x74\x70\x96\xfe\x25\x7d\x11\x52\xa5\x62\x84\xf6\x04\xe6\x53\xb4\xd8\x0a\x84\x75\x0c\x7d\x9a\x1a\x87\x30\x0f\xff\x43\x5c\x83\x11\x4e\xa4\x86\xb9\xa4\x29\xf4\x96\xe5\xc6\xde\x20\x96\x72\x46\x88\x1a\x2c\x16\x66\xe6\x95\xc7\xfc\x8b\xad\xb8\x66\x00\x4d\x09\xa8\x99\xe6\x29\x44\xe4\x3e\x4d\xc7\x59\xea\x42\x8a\x6f\x71\x35\x0d\x81\x4c\x2b\xcc\x6f\x6d\x25\xce\xfc\x62\xc0\xa3\xab\x65\xde\xb4\xc9\x07\xbd\x6e\x81\xd3\xc4\xff\x7f\x7e\xe2\x75\x2c\x7b\x02\xb3\x08\x46\xab\x05\xe0\x55\x69\x1c\x0a\x30\x7a\x05\x45\x2b\xf1\xef\x1f\x3f\x5e\xb4\x90\xce\xa1\x72\x08\x4f\x76\xf8\x38\x7b\x79\xf6\xfa\xe5\xaa\xa3\x9f\xb4\xf2\xa4\x8e\xc5\x30\xce\x1c\x42\xdf\x7b\x07\xb5\xab\x3a\x7e\xe9\xb9\xa8\x33\x66\x2f\x98\x32\xa7\x7b\x14\x6d\x2d\xa4\x63\x23\x85\x22\x78\xa4\x95\xe8\x61\x27\x09\x67\xb1\x7b\xe2\xa3\xe8\x9b\xd3\xd6\xfc\x63\xc5\x26\x83\x2d\xe4\xf1\x2e\x90\x0e\xb4\x21\xd0\xc8\xd1\x39\x66\x17\x71\x6d\x35\x35\x95\x12\x30\xc2\xd6\xbd\x72\xcd\xb0\x3f\xfa\x76\xad\x34\x64\x56\x49\xb4\xe0\xd3\xad\x34\xda\x9d\x80\xb1\x20\x09\xe6\x52\x29\xe0\xcc\x1b\xcd\xa3\x6c\xab\x81\xa1\xa4\x17\x9d\x2f\x80\xe6\x92\x63\xba\x23\x1e\x37\xc3\x7b\x0c\xc9\x8f\x21\xb9\x71\xf5\x37\x09\xc9\xc3\x86\x69\xb7\x2c\x25\x6a\xb7\x2e\x17\x8a\xbb\xd8\x5b\x77\x48\xda\x0e\xf7\xb0\x26\xbd\x97\x35\xd9\xd6\x93\x9b\x38\xe8\xfd\x17\x62\x64\xab\xbb\x1d\x51\xec\x81\xc0\xcf\xef\x43\x4e\x30\xf2\xba\xef\x1a\x09\x22\x87\x42\xb8\x78\x7b\xb7\x13\x9c\x9d\x58\x3d\xe5\x0e\x43\x7a\x0b\x69\x6f\x72\xfe\xce\x87\x73\xbb\x81\xef\x7d\x40\xb7\x5f\x40\x38\xec\x10\xef\xe9\xf3\xaf\x8c\x63\xcd\x38\x1f\xe2\x84\x6e\x93\x9c\x83\xf7\x47\xf7\x00\x60\x47\x28\x2a\x8d\xb8\x7b\xf4\xb9\xed\xdc\x3a\x2c\xbb\xc6\x30\x96\xd6\x11\xd0\xdc\x44\xc7\xc5\x15\x56\x69\xd1\xa1\xa6\x13\x2f\xa0\xb3\xa8\x68\x32\x3f\x8c\x16\x61\x5d\x10\x8b\x01\x0e\xb9\x5f\x07\x7d\x31\xa3\xdb\x4e\xe4\xee\x78\x02\xfd\xcd\xe3\xd8\x9a\x76\x27\x05\x72\x66\xf3\x30\xa4\x00\x80\x18\x55\x6e\x13\x80\x95\xd3\x9f\xfd\x27\xfc\x0e\x00\x51\x71\x41\xea\x2e\x3a\xfd\xa8\xbf\x4a\xeb\xf7\x11\x0e\x1f\xf8\xae\x42\x27\xcc\x3d\x5e\x54\xb8\xf7\x8b\x0a\xb7\x05\xbc\xa4\x1b\x61\xbe\x76\x0b\x81\xc4\x87\x51\x1e\x47\x4b\x6e\x68\x8d\xa1\xf0\x35\x2d\xb1\xe8\xf6\x40\x4b\xdb\xfa\xf8\xff\x09\x9f\x32\xa9\xd7\x3a\x5d\xe2\x62\x5b\x9f\x4b\x5c\xac\x35\x96\x3a\x8e\x28\x77\x97\xb2\xcc\x67\x68\xe5\x78\x11\x43\x98\x0f\xca\x4b\x7a\x83\x30\x18\xb7\x79\xae\x2a\x3d\xcf\xa1\x8e\xb5\x9a\x15\x2b\x17\x20\x1e\xe2\x1a\xd3\xb7\x09\xdd\xc7\x50\x47\x62\x88\x01\x18\x96\x6a\xfc\x96\x97\x09\x81\xc2\xa7\x9f\xa6\x95\xd4\x5f\x90\x93\xb1\x9d\x6d\x6d\xd8\xad\x87\x68\x3a\x37\xf6\x52\x19\x26\x42\x58\xcd\x9b\xeb\x23\x9c\xe9\x90\xcc\x4a\xe4\x72\x2c\x39\x53\x6a\x01\x81\xb1\xa1\x98\xc0\x42\xce\x23\x03\x52\x0b\xc9\x19\x21\x48\x72\xd0\x5e\x3d\x31\x60\x91\xa3\x9c\x21\x78\x99\x40\x96\x8d\xc7\x92\x7f\x55\xe2\xdb\x92\x7a\xf6\x08\x84\xb7\xe7\x8c\xcd\xd6\xee\xf7\x3f\xfd\x72\xfe\xf9\xd9\xe0\x3c\x7c\xfe\x30\x18\x5c\xf7\xeb\x6f\xe7\x31\x9d\xfc\xc9\xf2\xc9\xe7\x70\x26\xa5\xd5\x22\xd8\x03\x9a\xcb\x31\xa1\x96\x23\x1d\x4c\x8d\xa3\xcc\x4f\xad\x2d\x06\x8c\x74\x32\x34\x45\x3b\x97\x0e\x81\x69\xc0\x2b\xb2\xac\x46\x5c\xd7\xd8\xfc\x76\xb9\xb7\xe4\xa7\xdf\x6b\x86\xd8\x54\x47\xaa\xad\x39\x28\x5b\x4d\x3d\x8f\x89\xf1\x31\x31\xfa\xc4\x78\x54\x6f\x2d\xd6\x6e\x59\xc7\x18\x1d\x8f\x54\xf3\x12\x6d\x21\x5d\xa8\xda\xc5\xe7\x49\x3c\x29\xa9\xbf\x37\x12\xea\x9f\xab\x65\x88\xc4\xab\x72\xdd\x5e\xb1\x96\x52\x3f\x89\x29\xa1\x60\x65\xd3\xc4\x13\xbd\xb2\xea\xcd\x4a\xf9\x5b\x16\x6c\xe2\x73\x8a\x35\x45\xe7\x66\x6d\x36\x7b\x9e\xbe\x48\xcf\x96\x2d\x2e\x2a\xa5\x2e\xc2\xad\x94\x0c\x3e\x8c\x7f\x32\x74\x11\xf7\x16\xa1\x45\x2c\xe2\x36\xf8\x5f\x9f\xbe\x3e\x1d\xfa\x79\x13\x7e\xaf\x24\xa6\x64\xc3\x65\xf3\x90\x68\x97\x8f\x3b\x5f\xd3\x45\xa1\x6a\x19\x45\xc1\xb4\x68\x64\x24\x89\x23\x63\xd9\x04\x53\x72\x62\x94\x5a\x24\xd4\xde\x35\x6f\x7e\x9c\xb6\x2d\xa2\xf0\xd4\xe7\xf2\x37\x3b\x34\x1c\xfd\x5a\xa1\x8f\xc0\xde\x03\x09\xcc\x98\x95\x6c\xe4\xd3\x6c\xf7\x48\xf7\x08\x40\xa0\xe3\x56\x96\x91\x03\x4f\xea\x15\xcd\xc2\x11\x16\x4b\x8e\x3d\xf9\x6f\x00\x00\x00\xff\xff\x67\xda\x6a\xcd\x57\x2f\x00\x00")

func stacksPrometheusStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksPrometheusStackYaml,
		"stacks/prometheus-stack.yaml",
	)
}

func stacksPrometheusStackYaml() (*asset, error) {
	bytes, err := stacksPrometheusStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/prometheus-stack.yaml", size: 12119, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stacksRioAutoscalerStackYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xdb\x8a\x1b\x31\x0c\x7d\xcf\x57\xe8\x2d\x50\xe2\xdc\x28\x65\xd7\x5f\xb1\x7f\x50\x14\xfb\xec\xc4\xd4\x37\x6c\x4d\x66\x53\xfa\xf1\x65\xc6\x33\xc9\xa6\xa4\xb0\x8f\x3e\x17\xe9\x58\x92\x49\xf1\xdd\x75\x55\xaf\x88\xb8\x97\x54\x0d\x7b\xa8\x06\x8e\x18\x91\x49\x51\x10\x45\xd3\x1f\x35\xbd\x89\x10\xf9\xe4\xa1\x9a\x54\x92\xfa\x8d\x92\x34\x49\xe9\x31\x0b\x02\x7f\xcc\x6c\x9f\x55\x61\x81\xa6\xc3\x7e\xe6\xc6\x72\xec\x22\xca\xd8\xc4\xf4\xa5\x20\x9a\xab\x12\x2e\x1d\x44\x65\x14\x83\x28\xdc\x8d\x8e\xed\x97\x2c\x16\xef\xdc\x7b\xd1\x74\x98\xd5\x55\xa6\x74\x83\x8b\x36\x0d\x9a\x7e\xec\xeb\x4c\x64\x8e\xce\xdc\xf1\x05\x16\x67\x7e\x29\x17\x05\xe5\xc2\x5e\xd3\x71\xc1\x1f\xbe\xa7\xe4\x5c\x50\xcf\xc9\x5b\x4d\xdf\xc3\x53\x45\x57\xd8\x60\xfc\x81\x4b\x56\xd3\x31\xac\x56\x15\xe5\xe2\x0c\xa6\xd9\x76\x2c\x18\xf8\xda\x46\xda\xf9\x74\x62\xff\x33\xa3\x04\x57\xab\x4b\xb1\x36\x5c\xd1\xfa\x1b\xb5\xd9\x07\xce\x75\x7d\x07\x71\x41\x94\x1b\xd0\x41\x36\xde\x55\xd9\xf4\xd9\xb2\x60\x33\xb0\x98\xf3\xc6\xc2\x43\x40\xc5\xa5\xad\x61\x11\x8f\xad\x4b\xbb\x25\xc3\x27\x67\x53\x7f\xf2\x8f\x16\x75\x5b\xfe\x13\xf3\x08\x17\x98\x14\x02\xa2\x65\x19\x03\x3f\xad\x47\x39\xd9\xfa\x6f\xc6\x46\xcf\x9d\x10\x6d\x4e\x2e\xca\x7f\xfc\xb7\xb4\x13\xed\xc2\x74\x08\x96\x5d\x3d\x73\x3c\xbc\xbe\x1e\x77\x0f\x49\x8b\xb6\xb8\xdc\x95\x6f\xbd\xf7\x6f\xc9\x3b\x73\xd5\xc4\x7e\xe0\x6b\x6b\x82\x8f\x9c\x2a\x96\x01\xbf\xec\x77\x67\x91\x3c\x5f\x76\x08\x1c\xed\x42\x3d\xd6\x9e\x41\xa5\x2c\x4e\x7d\xb7\xc4\x6d\x5b\xbc\x71\x63\x68\xc4\x65\x4d\x2f\xfb\xf5\xea\x6f\x00\x00\x00\xff\xff\xc0\xfd\x0e\x9f\x4f\x03\x00\x00")

func stacksRioAutoscalerStackYamlBytes() ([]byte, error) {
	return bindataRead(
		_stacksRioAutoscalerStackYaml,
		"stacks/rio-autoscaler-stack.yaml",
	)
}

func stacksRioAutoscalerStackYaml() (*asset, error) {
	bytes, err := stacksRioAutoscalerStackYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stacks/rio-autoscaler-stack.yaml", size: 847, mode: os.FileMode(420), modTime: time.Unix(1547228743, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"stacks/cert-manager-stack.yaml":    stacksCertManagerStackYaml,
	"stacks/coredns-stack.yaml":         stacksCorednsStackYaml,
	"stacks/istio-crd-stack.yaml":       stacksIstioCrdStackYaml,
	"stacks/istio-stack.yaml":           stacksIstioStackYaml,
	"stacks/istio-telemetry-stack.yaml": stacksIstioTelemetryStackYaml,
	"stacks/localstorage-stack.yaml":    stacksLocalstorageStackYaml,
	"stacks/nfs-stack.yaml":             stacksNfsStackYaml,
	"stacks/prometheus-stack.yaml":      stacksPrometheusStackYaml,
	"stacks/rio-autoscaler-stack.yaml":  stacksRioAutoscalerStackYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"stacks": &bintree{nil, map[string]*bintree{
		"cert-manager-stack.yaml":    &bintree{stacksCertManagerStackYaml, map[string]*bintree{}},
		"coredns-stack.yaml":         &bintree{stacksCorednsStackYaml, map[string]*bintree{}},
		"istio-crd-stack.yaml":       &bintree{stacksIstioCrdStackYaml, map[string]*bintree{}},
		"istio-stack.yaml":           &bintree{stacksIstioStackYaml, map[string]*bintree{}},
		"istio-telemetry-stack.yaml": &bintree{stacksIstioTelemetryStackYaml, map[string]*bintree{}},
		"localstorage-stack.yaml":    &bintree{stacksLocalstorageStackYaml, map[string]*bintree{}},
		"nfs-stack.yaml":             &bintree{stacksNfsStackYaml, map[string]*bintree{}},
		"prometheus-stack.yaml":      &bintree{stacksPrometheusStackYaml, map[string]*bintree{}},
		"rio-autoscaler-stack.yaml":  &bintree{stacksRioAutoscalerStackYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
